# Python stubs generated by omniidl from idl/TidyUpManager.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "BasicDataType.idl"
import BasicDataType_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

# #include "ExtendedDataTypes.idl"
import ExtendedDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

#
# Start of module "ogata"
#
__name__ = "ogata"
_0_ogata = omniORB.openModule("ogata", r"idl/TidyUpManager.idl")
_0_ogata__POA = omniORB.openModule("ogata__POA", r"idl/TidyUpManager.idl")


# enum RETURN_VALUE
_0_ogata.RETVAL_OK = omniORB.EnumItem("RETVAL_OK", 0)
_0_ogata.RETVAL_INVALID_PARAMETER = omniORB.EnumItem("RETVAL_INVALID_PARAMETER", 1)
_0_ogata.RETVAL_EMPTY_MAP = omniORB.EnumItem("RETVAL_EMPTY_MAP", 2)
_0_ogata.RETVAL_INVALID_PRECONDITION = omniORB.EnumItem("RETVAL_INVALID_PRECONDITION", 3)
_0_ogata.RETVAL_NOT_IMPL = omniORB.EnumItem("RETVAL_NOT_IMPL", 4)
_0_ogata.RETVAL_UNKNOWN_ERROR = omniORB.EnumItem("RETVAL_UNKNOWN_ERROR", 5)
_0_ogata.RETVAL_NOT_FOUND = omniORB.EnumItem("RETVAL_NOT_FOUND", 6)
_0_ogata.RETVAL_ODOMETRY_INVALID_VALUE = omniORB.EnumItem("RETVAL_ODOMETRY_INVALID_VALUE", 7)
_0_ogata.RETVAL_ODOMETRY_TIME_OUT = omniORB.EnumItem("RETVAL_ODOMETRY_TIME_OUT", 8)
_0_ogata.RETVAL_RANGE_INVALID_VALUE = omniORB.EnumItem("RETVAL_RANGE_INVALID_VALUE", 9)
_0_ogata.RETVAL_RANGE_TIME_OUT = omniORB.EnumItem("RETVAL_RANGE_TIME_OUT", 10)
_0_ogata.RETVAL_EMERGENCY_STOP = omniORB.EnumItem("RETVAL_EMERGENCY_STOP", 11)
_0_ogata.RETVAL_OUTOF_RANGE = omniORB.EnumItem("RETVAL_OUTOF_RANGE", 12)
_0_ogata.RETURN_VALUE = omniORB.Enum("IDL:ogata/RETURN_VALUE:1.0", (_0_ogata.RETVAL_OK, _0_ogata.RETVAL_INVALID_PARAMETER, _0_ogata.RETVAL_EMPTY_MAP, _0_ogata.RETVAL_INVALID_PRECONDITION, _0_ogata.RETVAL_NOT_IMPL, _0_ogata.RETVAL_UNKNOWN_ERROR, _0_ogata.RETVAL_NOT_FOUND, _0_ogata.RETVAL_ODOMETRY_INVALID_VALUE, _0_ogata.RETVAL_ODOMETRY_TIME_OUT, _0_ogata.RETVAL_RANGE_INVALID_VALUE, _0_ogata.RETVAL_RANGE_TIME_OUT, _0_ogata.RETVAL_EMERGENCY_STOP, _0_ogata.RETVAL_OUTOF_RANGE,))

_0_ogata._d_RETURN_VALUE  = (omniORB.tcInternal.tv_enum, _0_ogata.RETURN_VALUE._NP_RepositoryId, "RETURN_VALUE", _0_ogata.RETURN_VALUE._items)
_0_ogata._tc_RETURN_VALUE = omniORB.tcInternal.createTypeCode(_0_ogata._d_RETURN_VALUE)
omniORB.registerType(_0_ogata.RETURN_VALUE._NP_RepositoryId, _0_ogata._d_RETURN_VALUE, _0_ogata._tc_RETURN_VALUE)

# interface TidyUpManager
_0_ogata._d_TidyUpManager = (omniORB.tcInternal.tv_objref, "IDL:ogata/TidyUpManager:1.0", "TidyUpManager")
omniORB.typeMapping["IDL:ogata/TidyUpManager:1.0"] = _0_ogata._d_TidyUpManager
_0_ogata.TidyUpManager = omniORB.newEmptyClass()
class TidyUpManager :
    _NP_RepositoryId = _0_ogata._d_TidyUpManager[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ogata.TidyUpManager = TidyUpManager
_0_ogata._tc_TidyUpManager = omniORB.tcInternal.createTypeCode(_0_ogata._d_TidyUpManager)
omniORB.registerType(TidyUpManager._NP_RepositoryId, _0_ogata._d_TidyUpManager, _0_ogata._tc_TidyUpManager)

# TidyUpManager operations and attributes
TidyUpManager._d_tidyup = ((omniORB.typeMapping["IDL:RTC/TimedPose2D:1.0"], omniORB.typeMapping["IDL:RTC/TimedString:1.0"]), (omniORB.typeMapping["IDL:ogata/RETURN_VALUE:1.0"], ), None)

# TidyUpManager object reference
class _objref_TidyUpManager (CORBA.Object):
    _NP_RepositoryId = TidyUpManager._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def tidyup(self, *args):
        return self._obj.invoke("tidyup", _0_ogata.TidyUpManager._d_tidyup, args)

omniORB.registerObjref(TidyUpManager._NP_RepositoryId, _objref_TidyUpManager)
_0_ogata._objref_TidyUpManager = _objref_TidyUpManager
del TidyUpManager, _objref_TidyUpManager

# TidyUpManager skeleton
__name__ = "ogata__POA"
class TidyUpManager (PortableServer.Servant):
    _NP_RepositoryId = _0_ogata.TidyUpManager._NP_RepositoryId


    _omni_op_d = {"tidyup": _0_ogata.TidyUpManager._d_tidyup}

TidyUpManager._omni_skeleton = TidyUpManager
_0_ogata__POA.TidyUpManager = TidyUpManager
omniORB.registerSkeleton(TidyUpManager._NP_RepositoryId, TidyUpManager)
del TidyUpManager
__name__ = "ogata"

# interface StringNavigationCommanderService
_0_ogata._d_StringNavigationCommanderService = (omniORB.tcInternal.tv_objref, "IDL:ogata/StringNavigationCommanderService:1.0", "StringNavigationCommanderService")
omniORB.typeMapping["IDL:ogata/StringNavigationCommanderService:1.0"] = _0_ogata._d_StringNavigationCommanderService
_0_ogata.StringNavigationCommanderService = omniORB.newEmptyClass()
class StringNavigationCommanderService :
    _NP_RepositoryId = _0_ogata._d_StringNavigationCommanderService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ogata.StringNavigationCommanderService = StringNavigationCommanderService
_0_ogata._tc_StringNavigationCommanderService = omniORB.tcInternal.createTypeCode(_0_ogata._d_StringNavigationCommanderService)
omniORB.registerType(StringNavigationCommanderService._NP_RepositoryId, _0_ogata._d_StringNavigationCommanderService, _0_ogata._tc_StringNavigationCommanderService)

# StringNavigationCommanderService operations and attributes
StringNavigationCommanderService._d_move = ((omniORB.typeMapping["IDL:RTC/TimedPose2D:1.0"], ), (omniORB.typeMapping["IDL:ogata/RETURN_VALUE:1.0"], ), None)

# StringNavigationCommanderService object reference
class _objref_StringNavigationCommanderService (CORBA.Object):
    _NP_RepositoryId = StringNavigationCommanderService._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def move(self, *args):
        return self._obj.invoke("move", _0_ogata.StringNavigationCommanderService._d_move, args)

omniORB.registerObjref(StringNavigationCommanderService._NP_RepositoryId, _objref_StringNavigationCommanderService)
_0_ogata._objref_StringNavigationCommanderService = _objref_StringNavigationCommanderService
del StringNavigationCommanderService, _objref_StringNavigationCommanderService

# StringNavigationCommanderService skeleton
__name__ = "ogata__POA"
class StringNavigationCommanderService (PortableServer.Servant):
    _NP_RepositoryId = _0_ogata.StringNavigationCommanderService._NP_RepositoryId


    _omni_op_d = {"move": _0_ogata.StringNavigationCommanderService._d_move}

StringNavigationCommanderService._omni_skeleton = StringNavigationCommanderService
_0_ogata__POA.StringNavigationCommanderService = StringNavigationCommanderService
omniORB.registerSkeleton(StringNavigationCommanderService._NP_RepositoryId, StringNavigationCommanderService)
del StringNavigationCommanderService
__name__ = "ogata"

# interface Picker
_0_ogata._d_Picker = (omniORB.tcInternal.tv_objref, "IDL:ogata/Picker:1.0", "Picker")
omniORB.typeMapping["IDL:ogata/Picker:1.0"] = _0_ogata._d_Picker
_0_ogata.Picker = omniORB.newEmptyClass()
class Picker :
    _NP_RepositoryId = _0_ogata._d_Picker[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ogata.Picker = Picker
_0_ogata._tc_Picker = omniORB.tcInternal.createTypeCode(_0_ogata._d_Picker)
omniORB.registerType(Picker._NP_RepositoryId, _0_ogata._d_Picker, _0_ogata._tc_Picker)

# Picker operations and attributes
Picker._d_pick = ((omniORB.typeMapping["IDL:RTC/TimedString:1.0"], ), (omniORB.typeMapping["IDL:ogata/RETURN_VALUE:1.0"], ), None)

# Picker object reference
class _objref_Picker (CORBA.Object):
    _NP_RepositoryId = Picker._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def pick(self, *args):
        return self._obj.invoke("pick", _0_ogata.Picker._d_pick, args)

omniORB.registerObjref(Picker._NP_RepositoryId, _objref_Picker)
_0_ogata._objref_Picker = _objref_Picker
del Picker, _objref_Picker

# Picker skeleton
__name__ = "ogata__POA"
class Picker (PortableServer.Servant):
    _NP_RepositoryId = _0_ogata.Picker._NP_RepositoryId


    _omni_op_d = {"pick": _0_ogata.Picker._d_pick}

Picker._omni_skeleton = Picker
_0_ogata__POA.Picker = Picker
omniORB.registerSkeleton(Picker._NP_RepositoryId, Picker)
del Picker
__name__ = "ogata"

# interface Droper
_0_ogata._d_Droper = (omniORB.tcInternal.tv_objref, "IDL:ogata/Droper:1.0", "Droper")
omniORB.typeMapping["IDL:ogata/Droper:1.0"] = _0_ogata._d_Droper
_0_ogata.Droper = omniORB.newEmptyClass()
class Droper :
    _NP_RepositoryId = _0_ogata._d_Droper[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ogata.Droper = Droper
_0_ogata._tc_Droper = omniORB.tcInternal.createTypeCode(_0_ogata._d_Droper)
omniORB.registerType(Droper._NP_RepositoryId, _0_ogata._d_Droper, _0_ogata._tc_Droper)

# Droper operations and attributes
Droper._d_drop = ((omniORB.typeMapping["IDL:RTC/TimedString:1.0"], ), (omniORB.typeMapping["IDL:ogata/RETURN_VALUE:1.0"], ), None)

# Droper object reference
class _objref_Droper (CORBA.Object):
    _NP_RepositoryId = Droper._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def drop(self, *args):
        return self._obj.invoke("drop", _0_ogata.Droper._d_drop, args)

omniORB.registerObjref(Droper._NP_RepositoryId, _objref_Droper)
_0_ogata._objref_Droper = _objref_Droper
del Droper, _objref_Droper

# Droper skeleton
__name__ = "ogata__POA"
class Droper (PortableServer.Servant):
    _NP_RepositoryId = _0_ogata.Droper._NP_RepositoryId


    _omni_op_d = {"drop": _0_ogata.Droper._d_drop}

Droper._omni_skeleton = Droper
_0_ogata__POA.Droper = Droper
omniORB.registerSkeleton(Droper._NP_RepositoryId, Droper)
del Droper
__name__ = "ogata"

#
# End of module "ogata"
#
__name__ = "TidyUpManager_idl"

_exported_modules = ( "ogata", )

# The end.
